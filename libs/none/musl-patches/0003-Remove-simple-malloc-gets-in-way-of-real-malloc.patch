From 6a28d7b29c7b1bc95ca53f387eb485134638f911 Mon Sep 17 00:00:00 2001
From: Will Dietz <w@wdtz.org>
Date: Fri, 29 Jul 2016 07:48:18 -0500
Subject: [PATCH 3/4] Remove simple malloc, gets in way of 'real' malloc.

I think this is in place for use by musl's loader bits
to be used before everything's ready.

Our runtime resolution doesn't resolve weak aliases
the way they want us to, and so we end up using
this when we shouldn't.  Remove for now.
---
 src/malloc/lite_malloc.c |   50 ----------------------------------------------
 1 files changed, 0 insertions(+), 50 deletions(-)
 delete mode 100644 src/malloc/lite_malloc.c

diff --git a/src/malloc/lite_malloc.c b/src/malloc/lite_malloc.c
deleted file mode 100644
index a7e4a9f..0000000
--- a/src/malloc/lite_malloc.c
+++ /dev/null
@@ -1,50 +0,0 @@
-#include <stdlib.h>
-#include <stdint.h>
-#include <limits.h>
-#include <errno.h>
-#include "libc.h"
-
-#define ALIGN 16
-
-void *__expand_heap(size_t *);
-
-static void *__simple_malloc(size_t n)
-{
-	static char *cur, *end;
-	static volatile int lock[2];
-	size_t align=1, pad;
-	void *p;
-
-	if (!n) n++;
-	while (align<n && align<ALIGN)
-		align += align;
-
-	LOCK(lock);
-
-	pad = -(uintptr_t)cur & align-1;
-
-	if (n <= SIZE_MAX/2 + ALIGN) n += pad;
-
-	if (n > end-cur) {
-		size_t m = n;
-		char *new = __expand_heap(&m);
-		if (!new) {
-			UNLOCK(lock);
-			return 0;
-		}
-		if (new != end) {
-			cur = new;
-			n -= pad;
-			pad = 0;
-		}
-		end = new + m;
-	}
-
-	p = cur + pad;
-	cur += n;
-	UNLOCK(lock);
-	return p;
-}
-
-weak_alias(__simple_malloc, malloc);
-weak_alias(__simple_malloc, __malloc0);
-- 
1.7.1

